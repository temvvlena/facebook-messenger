{"version":3,"sources":["Message.js","firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kUAwBeA,EApBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACnBC,EAD+C,EAAnBC,WACNF,EAAQE,SAEpC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CACIC,MAAM,QACNC,QAAQ,KACRC,UAAU,KAHd,WAKMR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,UALL,MAKkEF,EAAQA,oB,QCF/EU,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,2CACZC,UAAW,2BACXC,cAAe,uCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,yBCgERC,MAnEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiByB,EAAjB,KA0BA,OAxBAC,qBAAU,WAERlB,EAAGmB,WAAW,YACbC,QAAQ,YAAa,QACrBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAID,EAAIC,GAAIpC,QAASmC,EAAIE,iBAEjE,IAEHT,qBAAU,WACRD,EAAYW,OAAO,6BAClB,IAcD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAI,kGACT,0CAAarC,KAEb,sBAAMC,UAAU,YAAhB,SACE,eAACqC,EAAA,EAAD,CAAarC,UAAU,mBAAvB,UACE,cAACsC,EAAA,EAAD,CACEtC,UAAU,aACVuC,YAAY,sBACZC,MAAOpB,EACPqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,UAC3C,cAACI,EAAA,EAAD,CACE5C,UAAU,kBACV6C,UAAWzB,EACXf,QAAQ,YACRD,MAAM,UACN0C,KAAK,SACLC,QA7BU,SAACL,GACnBA,EAAMM,iBAENzC,EAAGmB,WAAW,YAAYuB,IAAI,CAC5BpD,QAASuB,EACTrB,SAAUA,EACVmD,UAAW1C,IAASS,UAAUkC,WAAWC,oBAE3C/B,EAAS,KAeH,SAOA,cAAC,IAAD,WAIN,cAAC,IAAD,UAEIC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIpC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAEEE,SAAUA,EACVF,QAASA,GAFFoC,YCrDJoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2186c61.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from '@material-ui/core'\nimport React, { forwardRef } from 'react'\nimport './Message.css';\n\nconst Message = forwardRef(({message, username}, ref) => {\n    const isUser = username === message.username;\n\n    return (\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            <Card className={isUser ? 'message__userCard' : 'message__guestCard'}>\n                <CardContent>\n                    <Typography\n                        color=\"white\"\n                        variant=\"h5\"\n                        component=\"h2\"\n                    >\n                        {!isUser && `${message.username || 'Unknown user'}: says`} : {message.message}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n    )\n});\n\nexport default Message\n","import firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyCnvLyOmKsMUQaT7Ho9zk75VHtYctP3w4c\",\n    authDomain: \"facebook-messenger-565a7.firebaseapp.com\",\n    projectId: \"facebook-messenger-565a7\",\n    storageBucket: \"facebook-messenger-565a7.appspot.com\",\n    messagingSenderId: \"712817552242\",\n    appId: \"1:712817552242:web:f9bb71ba8d8a3381d8cbeb\",\n    measurementId: \"G-YDSRZX85EP\"\n  });\n \nconst db = firebaseApp.firestore();\n\nexport default db;","import React, { useState, useEffect } from 'react';\nimport { FormControl, Input, IconButton } from '@material-ui/core';\nimport './App.css';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState('');\n\n  useEffect(() => {\n    // Run once when the app component runs\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [])\n  \n  useEffect(() => {\n    setUsername(prompt(\"Please enter your name\"));\n  }, [] )\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://en.facebookbrand.com/wp-content/uploads/2018/09/Header-e1538151782912.png?w=100&h=100\" />\n      <h2>Welcome {username}</h2>\n\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input \n            className=\"app__input\"\n            placeholder=\"Enter a message ...\"\n            value={input} \n            onChange={event => setInput(event.target.value)}/>\n          <IconButton\n            className=\"app__iconButton\"\n            disabled={!input}\n            variant=\"contained\"\n            color=\"primary\"\n            type='submit'\n            onClick={sendMessage}>\n          <SendIcon />\n          </IconButton>\n        </FormControl>\n      </form>\n    <FlipMove>\n      {\n        messages.map(({id, message}) => (\n          <Message  \n            key = {id}\n            username={username}\n            message={message} />\n        ))\n      }\n    </FlipMove>\n\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}